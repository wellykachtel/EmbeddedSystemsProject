

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Apr 20 21:24:53 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	nvCOMRAM
    31  000022                     __pnvCOMRAM:
    32                           	opt stack 0
    33  000022                     _TMR2_InterruptHandler:
    34                           	opt stack 0
    35  000022                     	ds	2
    36  0000                     _ANSELA	set	3896
    37  0000                     _ANSELB	set	3897
    38  0000                     _ANSELC	set	3898
    39  0000                     _ANSELD	set	3899
    40  0000                     _ANSELE	set	3900
    41  0000                     _CCP4CON	set	3927
    42  0000                     _CCP5CON	set	3924
    43  0000                     _CCPR4H	set	3929
    44  0000                     _CCPR4L	set	3928
    45  0000                     _CCPR5H	set	3926
    46  0000                     _CCPR5L	set	3925
    47  0000                     _CCPTMRS1bits	set	3912
    48  0000                     _INTCON2bits	set	4081
    49  0000                     _INTCONbits	set	4082
    50  0000                     _IPR1bits	set	3999
    51  0000                     _LATA	set	3977
    52  0000                     _LATB	set	3978
    53  0000                     _LATC	set	3979
    54  0000                     _LATD	set	3980
    55  0000                     _LATE	set	3981
    56  0000                     _OSCCON	set	4051
    57  0000                     _OSCCON2	set	4050
    58  0000                     _OSCTUNE	set	3995
    59  0000                     _PIE1bits	set	3997
    60  0000                     _PIR1bits	set	3998
    61  0000                     _PORTBbits	set	3969
    62  0000                     _PR2	set	4027
    63  0000                     _RCONbits	set	4048
    64  0000                     _T2CON	set	4026
    65  0000                     _T2CONbits	set	4026
    66  0000                     _TMR2	set	4028
    67  0000                     _TRISA	set	3986
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISE	set	3990
    72  0000                     _WPUB	set	3937
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  0002E4                     __pcinit:
    78                           	opt stack 0
    79  0002E4                     start_initialization:
    80                           	opt stack 0
    81  0002E4                     __initialization:
    82                           	opt stack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (12 bytes)
    85  0002E4  EE00  F016         	lfsr	0,__pbssCOMRAM
    86  0002E8  0E0C               	movlw	12
    87  0002EA                     clear_0:
    88  0002EA  6AEE               	clrf	postinc0,c
    89  0002EC  06E8               	decf	wreg,f,c
    90  0002EE  E1FD               	bnz	clear_0
    91  0002F0                     end_of_initialization:
    92                           	opt stack 0
    93  0002F0                     __end_of__initialization:
    94                           	opt stack 0
    95  0002F0  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96  0002F2  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97  0002F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    98  0002F6  6EF8               	movwf	tblptru,c
    99  0002F8  0100               	movlb	0
   100  0002FA  EFAD  F001         	goto	_main	;jump to C main() function
   101                           tblptru	equ	0xFF8
   102                           postinc0	equ	0xFEE
   103                           wreg	equ	0xFE8
   104                           
   105                           	psect	bssCOMRAM
   106  000016                     __pbssCOMRAM:
   107                           	opt stack 0
   108  000016                     _PWMFlag:
   109                           	opt stack 0
   110  000016                     	ds	2
   111  000018                     _PWMdelay:
   112                           	opt stack 0
   113  000018                     	ds	2
   114  00001A                     _counter:
   115                           	opt stack 0
   116  00001A                     	ds	2
   117  00001C                     _direction1:
   118                           	opt stack 0
   119  00001C                     	ds	2
   120  00001E                     _direction2:
   121                           	opt stack 0
   122  00001E                     	ds	2
   123  000020                     _on:
   124                           	opt stack 0
   125  000020                     	ds	2
   126                           tblptru	equ	0xFF8
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	opt stack 0
   133  000001                     PWM4_LoadDutyValue@dutyValue:
   134                           	opt stack 0
   135  000001                     PWM5_LoadDutyValue@dutyValue:
   136                           	opt stack 0
   137                           
   138                           ; 2 bytes @ 0x0
   139  000001                     	ds	2
   140  000003                     ??_PWM4_LoadDutyValue:
   141  000003                     ??_PWM5_LoadDutyValue:
   142                           
   143                           ; 1 bytes @ 0x2
   144  000003                     	ds	2
   145  000005                     ??_TMR2_DefaultInterruptHandler:
   146                           
   147                           ; 1 bytes @ 0x4
   148  000005                     	ds	1
   149  000006                     ??_INTERRUPT_InterruptManager:
   150                           
   151                           ; 1 bytes @ 0x5
   152  000006                     	ds	14
   153  000014                     TMR2_SetInterruptHandler@InterruptHandler:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x13
   157  000014                     	ds	2
   158  000016                     tblptru	equ	0xFF8
   159                           postinc0	equ	0xFEE
   160                           wreg	equ	0xFE8
   161                           
   162                           ; 1 bytes @ 0x15
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 52 in file "main.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;Total ram usage:        0 bytes
   187 ;; Hardware stack levels required when called:    8
   188 ;; This function calls:
   189 ;;		_SYSTEM_Initialize
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           	psect	text0
   196  00035A                     __ptext0:
   197                           	opt stack 0
   198  00035A                     _main:
   199                           	opt stack 23
   200                           
   201                           ;main.c: 55: SYSTEM_Initialize();
   202                           
   203                           ; BSR set to: 15
   204                           ;incstack = 0
   205  00035A  EC7F  F001         	call	_SYSTEM_Initialize	;wreg free
   206                           
   207                           ;main.c: 74: (INTCONbits.GIE = 1);
   208  00035E  8EF2               	bsf	intcon,7,c	;volatile
   209                           
   210                           ;main.c: 77: (INTCONbits.PEIE = 1);
   211  000360  8CF2               	bsf	intcon,6,c	;volatile
   212  000362                     l17:
   213                           
   214                           ;main.c: 86: {
   215  000362  D7FF               	goto	l17
   216  000364                     __end_of_main:
   217                           	opt stack 0
   218                           tblptru	equ	0xFF8
   219                           intcon	equ	0xFF2
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           
   223 ;; *************** function _SYSTEM_Initialize *****************
   224 ;; Defined at:
   225 ;;		line 113 in file "mcc_generated_files/mcc.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used:    1
   245 ;; Hardware stack levels required when called:    7
   246 ;; This function calls:
   247 ;;		_INTERRUPT_Initialize
   248 ;;		_OSCILLATOR_Initialize
   249 ;;		_PIN_MANAGER_Initialize
   250 ;;		_PWM4_Initialize
   251 ;;		_PWM5_Initialize
   252 ;;		_TMR2_Initialize
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text1
   259  0002FE                     __ptext1:
   260                           	opt stack 0
   261  0002FE                     _SYSTEM_Initialize:
   262                           	opt stack 23
   263                           
   264                           ;mcc.c: 116: INTERRUPT_Initialize();
   265                           
   266                           ;incstack = 0
   267  0002FE  ECBB  F001         	call	_INTERRUPT_Initialize	;wreg free
   268                           
   269                           ;mcc.c: 117: PIN_MANAGER_Initialize();
   270  000302  ECF7  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   271                           
   272                           ;mcc.c: 118: OSCILLATOR_Initialize();
   273  000306  ECA6  F001         	call	_OSCILLATOR_Initialize	;wreg free
   274                           
   275                           ;mcc.c: 119: PWM4_Initialize();
   276  00030A  EC99  F001         	call	_PWM4_Initialize	;wreg free
   277                           
   278                           ;mcc.c: 120: PWM5_Initialize();
   279  00030E  EC8C  F001         	call	_PWM5_Initialize	;wreg free
   280                           
   281                           ;mcc.c: 121: TMR2_Initialize();
   282  000312  EC51  F001         	call	_TMR2_Initialize	;wreg free
   283  000316  0012               	return		;funcret
   284  000318                     __end_of_SYSTEM_Initialize:
   285                           	opt stack 0
   286                           tblptru	equ	0xFF8
   287                           intcon	equ	0xFF2
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291 ;; *************** function _TMR2_Initialize *****************
   292 ;; Defined at:
   293 ;;		line 63 in file "mcc_generated_files/tmr2.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    6
   314 ;; This function calls:
   315 ;;		_TMR2_SetInterruptHandler
   316 ;;		_TMR2_StartTimer
   317 ;; This function is called by:
   318 ;;		_SYSTEM_Initialize
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text2
   323  0002A2                     __ptext2:
   324                           	opt stack 0
   325  0002A2                     _TMR2_Initialize:
   326                           	opt stack 23
   327                           
   328                           ;tmr2.c: 68: T2CON = 0x0A;
   329                           
   330                           ;incstack = 0
   331  0002A2  0E0A               	movlw	10
   332  0002A4  6EBA               	movwf	4026,c	;volatile
   333                           
   334                           ;tmr2.c: 71: PR2 = 0x9B;
   335  0002A6  0E9B               	movlw	155
   336  0002A8  6EBB               	movwf	4027,c	;volatile
   337                           
   338                           ;tmr2.c: 74: TMR2 = 0x00;
   339  0002AA  0E00               	movlw	0
   340  0002AC  6EBC               	movwf	4028,c	;volatile
   341                           
   342                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
   343  0002AE  929E               	bcf	3998,1,c	;volatile
   344                           
   345                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
   346  0002B0  829D               	bsf	3997,1,c	;volatile
   347                           
   348                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   349  0002B2  0EFE               	movlw	low _TMR2_DefaultInterruptHandler
   350  0002B4  6E14               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   351  0002B6  0E00               	movlw	high _TMR2_DefaultInterruptHandler
   352  0002B8  6E15               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   353  0002BA  ECB2  F001         	call	_TMR2_SetInterruptHandler	;wreg free
   354                           
   355                           ;tmr2.c: 86: TMR2_StartTimer();
   356  0002BE  ECBE  F001         	call	_TMR2_StartTimer	;wreg free
   357  0002C2  0012               	return		;funcret
   358  0002C4                     __end_of_TMR2_Initialize:
   359                           	opt stack 0
   360                           tblptru	equ	0xFF8
   361                           intcon	equ	0xFF2
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365 ;; *************** function _TMR2_StartTimer *****************
   366 ;; Defined at:
   367 ;;		line 89 in file "mcc_generated_files/tmr2.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		None
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; Hardware stack levels required when called:    5
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_TMR2_Initialize
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text3
   396  00037C                     __ptext3:
   397                           	opt stack 0
   398  00037C                     _TMR2_StartTimer:
   399                           	opt stack 23
   400                           
   401                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
   402                           
   403                           ;incstack = 0
   404  00037C  84BA               	bsf	4026,2,c	;volatile
   405  00037E  0012               	return		;funcret
   406  000380                     __end_of_TMR2_StartTimer:
   407                           	opt stack 0
   408                           tblptru	equ	0xFF8
   409                           intcon	equ	0xFF2
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           
   413 ;; *************** function _TMR2_SetInterruptHandler *****************
   414 ;; Defined at:
   415 ;;		line 143 in file "mcc_generated_files/tmr2.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  InterruptHan    2   19[COMRAM] PTR void 
   418 ;;		 -> TMR2_DefaultInterruptHandler(1), 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    5
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_TMR2_Initialize
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text4
   445  000364                     __ptext4:
   446                           	opt stack 0
   447  000364                     _TMR2_SetInterruptHandler:
   448                           	opt stack 23
   449                           
   450                           ;tmr2.c: 144: TMR2_InterruptHandler = InterruptHandler;
   451                           
   452                           ;incstack = 0
   453  000364  C014  F022         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
   454  000368  C015  F023         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
   455  00036C  0012               	return		;funcret
   456  00036E                     __end_of_TMR2_SetInterruptHandler:
   457                           	opt stack 0
   458                           tblptru	equ	0xFF8
   459                           intcon	equ	0xFF2
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           
   463 ;; *************** function _PWM5_Initialize *****************
   464 ;; Defined at:
   465 ;;		line 64 in file "mcc_generated_files/pwm5.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;Total ram usage:        0 bytes
   484 ;; Hardware stack levels used:    1
   485 ;; Hardware stack levels required when called:    5
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_SYSTEM_Initialize
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text5
   494  000318                     __ptext5:
   495                           	opt stack 0
   496  000318                     _PWM5_Initialize:
   497                           	opt stack 24
   498                           
   499                           ;pwm5.c: 69: CCP5CON = 0x1C;
   500                           
   501                           ;incstack = 0
   502  000318  0E1C               	movlw	28
   503  00031A  010F               	movlb	15	; () banked
   504  00031C  6F54               	movwf	84,b	;volatile
   505                           
   506                           ;pwm5.c: 72: CCPR5L = 0x84;
   507  00031E  0E84               	movlw	132
   508  000320  010F               	movlb	15	; () banked
   509  000322  6F55               	movwf	85,b	;volatile
   510                           
   511                           ;pwm5.c: 75: CCPR5H = 0x00;
   512  000324  0E00               	movlw	0
   513  000326  010F               	movlb	15	; () banked
   514  000328  6F56               	movwf	86,b	;volatile
   515                           
   516                           ;pwm5.c: 78: CCPTMRS1bits.C5TSEL = 0x0;
   517  00032A  0EF3               	movlw	-13
   518  00032C  010F               	movlb	15	; () banked
   519  00032E  1748               	andwf	72,f,b	;volatile
   520                           
   521                           ; BSR set to: 15
   522  000330  0012               	return		;funcret
   523  000332                     __end_of_PWM5_Initialize:
   524                           	opt stack 0
   525                           tblptru	equ	0xFF8
   526                           intcon	equ	0xFF2
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           
   530 ;; *************** function _PWM4_Initialize *****************
   531 ;; Defined at:
   532 ;;		line 64 in file "mcc_generated_files/pwm4.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    5
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_SYSTEM_Initialize
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text6
   561  000332                     __ptext6:
   562                           	opt stack 0
   563  000332                     _PWM4_Initialize:
   564                           	opt stack 24
   565                           
   566                           ;pwm4.c: 69: CCP4CON = 0x1C;
   567                           
   568                           ; BSR set to: 15
   569                           ;incstack = 0
   570  000332  0E1C               	movlw	28
   571  000334  010F               	movlb	15	; () banked
   572  000336  6F57               	movwf	87,b	;volatile
   573                           
   574                           ;pwm4.c: 72: CCPR4L = 0x84;
   575  000338  0E84               	movlw	132
   576  00033A  010F               	movlb	15	; () banked
   577  00033C  6F58               	movwf	88,b	;volatile
   578                           
   579                           ;pwm4.c: 75: CCPR4H = 0x00;
   580  00033E  0E00               	movlw	0
   581  000340  010F               	movlb	15	; () banked
   582  000342  6F59               	movwf	89,b	;volatile
   583                           
   584                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
   585  000344  0EFC               	movlw	-4
   586  000346  010F               	movlb	15	; () banked
   587  000348  1748               	andwf	72,f,b	;volatile
   588                           
   589                           ; BSR set to: 15
   590  00034A  0012               	return		;funcret
   591  00034C                     __end_of_PWM4_Initialize:
   592                           	opt stack 0
   593                           tblptru	equ	0xFF8
   594                           intcon	equ	0xFF2
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           
   598 ;; *************** function _PIN_MANAGER_Initialize *****************
   599 ;; Defined at:
   600 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    5
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_SYSTEM_Initialize
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text7
   629  0001EE                     __ptext7:
   630                           	opt stack 0
   631  0001EE                     _PIN_MANAGER_Initialize:
   632                           	opt stack 24
   633                           
   634                           ;pin_manager.c: 51: LATB = 0x0;
   635                           
   636                           ; BSR set to: 15
   637                           ;incstack = 0
   638  0001EE  0E00               	movlw	0
   639  0001F0  6E8A               	movwf	3978,c	;volatile
   640                           
   641                           ;pin_manager.c: 52: LATA = 0x0;
   642  0001F2  0E00               	movlw	0
   643  0001F4  6E89               	movwf	3977,c	;volatile
   644                           
   645                           ;pin_manager.c: 53: ANSELE = 0x7;
   646  0001F6  0E07               	movlw	7
   647  0001F8  010F               	movlb	15	; () banked
   648  0001FA  6F3C               	movwf	60,b	;volatile
   649                           
   650                           ;pin_manager.c: 54: LATE = 0x0;
   651  0001FC  0E00               	movlw	0
   652  0001FE  6E8D               	movwf	3981,c	;volatile
   653                           
   654                           ;pin_manager.c: 55: LATD = 0x0;
   655  000200  0E00               	movlw	0
   656  000202  6E8C               	movwf	3980,c	;volatile
   657                           
   658                           ;pin_manager.c: 56: LATC = 0x0;
   659  000204  0E00               	movlw	0
   660  000206  6E8B               	movwf	3979,c	;volatile
   661                           
   662                           ;pin_manager.c: 57: ANSELA = 0x2F;
   663  000208  0E2F               	movlw	47
   664  00020A  010F               	movlb	15	; () banked
   665  00020C  6F38               	movwf	56,b	;volatile
   666                           
   667                           ;pin_manager.c: 58: ANSELB = 0x0;
   668  00020E  0E00               	movlw	0
   669  000210  010F               	movlb	15	; () banked
   670  000212  6F39               	movwf	57,b	;volatile
   671                           
   672                           ;pin_manager.c: 59: ANSELC = 0xFC;
   673  000214  0EFC               	movlw	252
   674  000216  010F               	movlb	15	; () banked
   675  000218  6F3A               	movwf	58,b	;volatile
   676                           
   677                           ; BSR set to: 15
   678                           ;pin_manager.c: 60: ANSELD = 0xFF;
   679  00021A  010F               	movlb	15	; () banked
   680  00021C  693B               	setf	59,b	;volatile
   681                           
   682                           ; BSR set to: 15
   683                           ;pin_manager.c: 61: WPUB = 0xFF;
   684  00021E  6861               	setf	3937,c	;volatile
   685                           
   686                           ;pin_manager.c: 62: TRISD = 0xFD;
   687  000220  0EFD               	movlw	253
   688  000222  6E95               	movwf	3989,c	;volatile
   689                           
   690                           ;pin_manager.c: 63: TRISE = 0x3;
   691  000224  0E03               	movlw	3
   692  000226  6E96               	movwf	3990,c	;volatile
   693                           
   694                           ; BSR set to: 15
   695                           ;pin_manager.c: 64: TRISB = 0xFF;
   696  000228  6893               	setf	3987,c	;volatile
   697                           
   698                           ;pin_manager.c: 65: TRISC = 0xFB;
   699  00022A  0EFB               	movlw	251
   700  00022C  6E94               	movwf	3988,c	;volatile
   701                           
   702                           ; BSR set to: 15
   703                           ;pin_manager.c: 66: TRISA = 0xFF;
   704  00022E  6892               	setf	3986,c	;volatile
   705                           
   706                           ; BSR set to: 15
   707                           ;pin_manager.c: 68: INTCON2bits.nRBPU = 0x0;
   708  000230  9EF1               	bcf	intcon2,7,c	;volatile
   709                           
   710                           ; BSR set to: 15
   711                           ;pin_manager.c: 72: INTCONbits.RBIE = 0;
   712  000232  96F2               	bcf	intcon,3,c	;volatile
   713                           
   714                           ; BSR set to: 15
   715  000234  0012               	return		;funcret
   716  000236                     __end_of_PIN_MANAGER_Initialize:
   717                           	opt stack 0
   718                           tblptru	equ	0xFF8
   719                           intcon	equ	0xFF2
   720                           intcon2	equ	0xFF1
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           
   724 ;; *************** function _OSCILLATOR_Initialize *****************
   725 ;; Defined at:
   726 ;;		line 124 in file "mcc_generated_files/mcc.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    5
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_SYSTEM_Initialize
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text8
   755  00034C                     __ptext8:
   756                           	opt stack 0
   757  00034C                     _OSCILLATOR_Initialize:
   758                           	opt stack 24
   759                           
   760                           ;mcc.c: 127: OSCCON = 0x30;
   761                           
   762                           ; BSR set to: 15
   763                           ;incstack = 0
   764  00034C  0E30               	movlw	48
   765  00034E  6ED3               	movwf	4051,c	;volatile
   766                           
   767                           ;mcc.c: 129: OSCCON2 = 0x04;
   768  000350  0E04               	movlw	4
   769  000352  6ED2               	movwf	4050,c	;volatile
   770                           
   771                           ;mcc.c: 131: OSCTUNE = 0x00;
   772  000354  0E00               	movlw	0
   773  000356  6E9B               	movwf	3995,c	;volatile
   774  000358  0012               	return		;funcret
   775  00035A                     __end_of_OSCILLATOR_Initialize:
   776                           	opt stack 0
   777                           tblptru	equ	0xFF8
   778                           intcon	equ	0xFF2
   779                           intcon2	equ	0xFF1
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           
   783 ;; *************** function _INTERRUPT_Initialize *****************
   784 ;; Defined at:
   785 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		None
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    5
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_SYSTEM_Initialize
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text9
   814  000376                     __ptext9:
   815                           	opt stack 0
   816  000376                     _INTERRUPT_Initialize:
   817                           	opt stack 24
   818                           
   819                           ;interrupt_manager.c: 56: RCONbits.IPEN = 0;
   820                           
   821                           ;incstack = 0
   822  000376  9ED0               	bcf	4048,7,c	;volatile
   823                           
   824                           ;interrupt_manager.c: 61: IPR1bits.TMR2IP = 0;
   825  000378  929F               	bcf	3999,1,c	;volatile
   826  00037A  0012               	return		;funcret
   827  00037C                     __end_of_INTERRUPT_Initialize:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           intcon	equ	0xFF2
   831                           intcon2	equ	0xFF1
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           
   835 ;; *************** function _INTERRUPT_InterruptManager *****************
   836 ;; Defined at:
   837 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, pclat, tosl, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;Total ram usage:       14 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    4
   858 ;; This function calls:
   859 ;;		_TMR2_ISR
   860 ;; This function is called by:
   861 ;;		Interrupt level 2
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	intcode
   866  000008                     __pintcode:
   867                           	opt stack 0
   868  000008                     _INTERRUPT_InterruptManager:
   869                           	opt stack 23
   870                           
   871                           ;incstack = 0
   872  000008  8224               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   873  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
   874  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   875  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
   876  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
   877  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
   878  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
   879  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
   880  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
   881  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
   882  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
   883  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
   884  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
   885  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
   886  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
   887                           
   888                           ;interrupt_manager.c: 67: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
   889  000042  B29D               	btfsc	3997,1,c	;volatile
   890  000044  A29E               	btfss	3998,1,c	;volatile
   891  000046  D002               	goto	i2l172
   892                           
   893                           ;interrupt_manager.c: 68: {
   894                           ;interrupt_manager.c: 69: TMR2_ISR();
   895  000048  ECB7  F001         	call	_TMR2_ISR	;wreg free
   896  00004C                     i2l172:
   897                           
   898                           ;interrupt_manager.c: 74: }
   899                           ;interrupt_manager.c: 77: if(PORTBbits.RB0 == 0)
   900  00004C  B081               	btfsc	3969,0,c	;volatile
   901  00004E  D005               	goto	i2l173
   902                           
   903                           ;interrupt_manager.c: 78: {
   904                           ;interrupt_manager.c: 79: direction1 = 1;
   905  000050  0E00               	movlw	0
   906  000052  6E1D               	movwf	_direction1+1,c
   907  000054  0E01               	movlw	1
   908  000056  6E1C               	movwf	_direction1,c
   909  000058  D006               	goto	L1
   910  00005A                     i2l173:
   911                           
   912                           ;interrupt_manager.c: 83: else if(PORTBbits.RB1 == 0)
   913  00005A  B281               	btfsc	3969,1,c	;volatile
   914  00005C  D00C               	goto	i2l1095
   915                           
   916                           ;interrupt_manager.c: 84: {
   917                           ;interrupt_manager.c: 85: direction2 = 1;
   918  00005E  0E00               	movlw	0
   919  000060  6E1F               	movwf	_direction2+1,c
   920  000062  0E01               	movlw	1
   921  000064  6E1E               	movwf	_direction2,c
   922  000066                     L1:
   923                           
   924                           ;interrupt_manager.c: 86: PWMdelay = 20;
   925  000066  0E00               	movlw	0
   926  000068  6E19               	movwf	_PWMdelay+1,c
   927  00006A  0E14               	movlw	20
   928  00006C  6E18               	movwf	_PWMdelay,c
   929                           
   930                           ;interrupt_manager.c: 87: on = 1;
   931  00006E  0E00               	movlw	0
   932  000070  6E21               	movwf	_on+1,c
   933  000072  0E01               	movlw	1
   934  000074  6E20               	movwf	_on,c
   935  000076                     i2l1095:
   936                           
   937                           ;interrupt_manager.c: 88: }
   938                           ;interrupt_manager.c: 89: if((PORTBbits.RB0 || PORTBbits.RB1) && on)
   939  000076  A081               	btfss	3969,0,c	;volatile
   940  000078  B281               	btfsc	3969,1,c	;volatile
   941  00007A  D001               	goto	i2l1099
   942  00007C  D008               	goto	i2l1103
   943  00007E                     i2l1099:
   944  00007E  5020               	movf	_on,w,c
   945  000080  1021               	iorwf	_on+1,w,c
   946  000082  B4D8               	btfsc	status,2,c
   947  000084  D004               	goto	i2l1103
   948                           
   949                           ;interrupt_manager.c: 90: on = 0;
   950  000086  0E00               	movlw	0
   951  000088  6E21               	movwf	_on+1,c
   952  00008A  0E00               	movlw	0
   953  00008C  6E20               	movwf	_on,c
   954  00008E                     i2l1103:
   955                           
   956                           ;interrupt_manager.c: 92: if(PORTBbits.RB5 == 0)
   957  00008E  BA81               	btfsc	3969,5,c	;volatile
   958  000090  D004               	goto	i2l1107
   959                           
   960                           ;interrupt_manager.c: 93: {
   961                           ;interrupt_manager.c: 94: PWMdelay = 50;
   962  000092  0E00               	movlw	0
   963  000094  6E19               	movwf	_PWMdelay+1,c
   964  000096  0E32               	movlw	50
   965  000098  6E18               	movwf	_PWMdelay,c
   966  00009A                     i2l1107:
   967                           
   968                           ;interrupt_manager.c: 95: }
   969                           ;interrupt_manager.c: 96: if(PORTBbits.RB4 == 0)
   970  00009A  B881               	btfsc	3969,4,c	;volatile
   971  00009C  D004               	goto	i2l1111
   972                           
   973                           ;interrupt_manager.c: 97: {
   974                           ;interrupt_manager.c: 98: PWMdelay = 40;
   975  00009E  0E00               	movlw	0
   976  0000A0  6E19               	movwf	_PWMdelay+1,c
   977  0000A2  0E28               	movlw	40
   978  0000A4  6E18               	movwf	_PWMdelay,c
   979  0000A6                     i2l1111:
   980                           
   981                           ;interrupt_manager.c: 99: }
   982                           ;interrupt_manager.c: 100: if(PORTBbits.RB3 == 0)
   983  0000A6  B681               	btfsc	3969,3,c	;volatile
   984  0000A8  D004               	goto	i2l1115
   985                           
   986                           ;interrupt_manager.c: 101: {
   987                           ;interrupt_manager.c: 102: PWMdelay = 30;
   988  0000AA  0E00               	movlw	0
   989  0000AC  6E19               	movwf	_PWMdelay+1,c
   990  0000AE  0E1E               	movlw	30
   991  0000B0  6E18               	movwf	_PWMdelay,c
   992  0000B2                     i2l1115:
   993                           
   994                           ;interrupt_manager.c: 103: }
   995                           ;interrupt_manager.c: 105: if(PORTBbits.RB2 == 0)
   996  0000B2  B481               	btfsc	3969,2,c	;volatile
   997  0000B4  D004               	goto	i2l183
   998                           
   999                           ;interrupt_manager.c: 106: {
  1000                           ;interrupt_manager.c: 107: PWMdelay = 20;
  1001  0000B6  0E00               	movlw	0
  1002  0000B8  6E19               	movwf	_PWMdelay+1,c
  1003  0000BA  0E14               	movlw	20
  1004  0000BC  6E18               	movwf	_PWMdelay,c
  1005  0000BE                     i2l183:
  1006  0000BE  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1007  0000C2  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1008  0000C6  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1009  0000CA  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1010  0000CE  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1011  0000D2  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1012  0000D6  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1013  0000DA  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1014  0000DE  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1015  0000E2  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1016  0000E6  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1017  0000EA  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1018  0000EE  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1019  0000F2  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1020  0000F6  9224               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1021  0000F8  0011               	retfie		f
  1022  0000FA                     __end_of_INTERRUPT_InterruptManager:
  1023                           	opt stack 0
  1024                           pclatu	equ	0xFFB
  1025                           pclath	equ	0xFFA
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           intcon	equ	0xFF2
  1033                           intcon2	equ	0xFF1
  1034                           postinc0	equ	0xFEE
  1035                           fsr0h	equ	0xFEA
  1036                           fsr0l	equ	0xFE9
  1037                           wreg	equ	0xFE8
  1038                           fsr1h	equ	0xFE2
  1039                           fsr1l	equ	0xFE1
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _TMR2_ISR *****************
  1045 ;; Defined at:
  1046 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    3
  1067 ;; This function calls:
  1068 ;;		_TMR2_CallBack
  1069 ;; This function is called by:
  1070 ;;		_INTERRUPT_InterruptManager
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text11
  1075  00036E                     __ptext11:
  1076                           	opt stack 0
  1077  00036E                     _TMR2_ISR:
  1078                           	opt stack 23
  1079                           
  1080                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  1081                           
  1082                           ;incstack = 0
  1083  00036E  929E               	bcf	3998,1,c	;volatile
  1084                           
  1085                           ;tmr2.c: 129: TMR2_CallBack();
  1086  000370  EC62  F001         	call	_TMR2_CallBack	;wreg free
  1087  000374  0012               	return		;funcret
  1088  000376                     __end_of_TMR2_ISR:
  1089                           	opt stack 0
  1090                           pclatu	equ	0xFFB
  1091                           pclath	equ	0xFFA
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           prodh	equ	0xFF4
  1097                           prodl	equ	0xFF3
  1098                           intcon	equ	0xFF2
  1099                           intcon2	equ	0xFF1
  1100                           postinc0	equ	0xFEE
  1101                           fsr0h	equ	0xFEA
  1102                           fsr0l	equ	0xFE9
  1103                           wreg	equ	0xFE8
  1104                           fsr1h	equ	0xFE2
  1105                           fsr1l	equ	0xFE1
  1106                           fsr2h	equ	0xFDA
  1107                           fsr2l	equ	0xFD9
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _TMR2_CallBack *****************
  1111 ;; Defined at:
  1112 ;;		line 133 in file "mcc_generated_files/tmr2.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    2
  1133 ;; This function calls:
  1134 ;;		Absolute function
  1135 ;;		_TMR2_DefaultInterruptHandler
  1136 ;; This function is called by:
  1137 ;;		_TMR2_ISR
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text12
  1142  0002C4                     __ptext12:
  1143                           	opt stack 0
  1144  0002C4                     _TMR2_CallBack:
  1145                           	opt stack 23
  1146                           
  1147                           ;tmr2.c: 137: if(TMR2_InterruptHandler)
  1148                           
  1149                           ;incstack = 0
  1150  0002C4  5022               	movf	_TMR2_InterruptHandler,w,c
  1151  0002C6  1023               	iorwf	_TMR2_InterruptHandler+1,w,c
  1152  0002C8  B4D8               	btfsc	status,2,c
  1153  0002CA  0012               	return	
  1154                           
  1155                           ;tmr2.c: 138: {
  1156                           ;tmr2.c: 139: TMR2_InterruptHandler();
  1157  0002CC  D801               	call	i2u29_48
  1158  0002CE  0012               	return	
  1159  0002D0                     i2u29_48:
  1160  0002D0  0005               	push	
  1161  0002D2  6EFA               	movwf	pclath,c
  1162  0002D4  5022               	movf	_TMR2_InterruptHandler,w,c
  1163  0002D6  6EFD               	movwf	tosl,c
  1164  0002D8  5023               	movf	_TMR2_InterruptHandler+1,w,c
  1165  0002DA  6EFE               	movwf	tosh,c
  1166  0002DC  50F8               	movf	tblptru,w,c
  1167  0002DE  6EFF               	movwf	tosu,c
  1168  0002E0  50FA               	movf	pclath,w,c
  1169  0002E2  0012               	return		;indir
  1170  0002E4                     __end_of_TMR2_CallBack:
  1171                           	opt stack 0
  1172                           tosu	equ	0xFFF
  1173                           tosh	equ	0xFFE
  1174                           tosl	equ	0xFFD
  1175                           pclatu	equ	0xFFB
  1176                           pclath	equ	0xFFA
  1177                           tblptru	equ	0xFF8
  1178                           tblptrh	equ	0xFF7
  1179                           tblptrl	equ	0xFF6
  1180                           tablat	equ	0xFF5
  1181                           prodh	equ	0xFF4
  1182                           prodl	equ	0xFF3
  1183                           intcon	equ	0xFF2
  1184                           intcon2	equ	0xFF1
  1185                           postinc0	equ	0xFEE
  1186                           fsr0h	equ	0xFEA
  1187                           fsr0l	equ	0xFE9
  1188                           wreg	equ	0xFE8
  1189                           fsr1h	equ	0xFE2
  1190                           fsr1l	equ	0xFE1
  1191                           fsr2h	equ	0xFDA
  1192                           fsr2l	equ	0xFD9
  1193                           status	equ	0xFD8
  1194                           
  1195 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  1196 ;; Defined at:
  1197 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    1
  1218 ;; This function calls:
  1219 ;;		_PWM4_LoadDutyValue
  1220 ;;		_PWM5_LoadDutyValue
  1221 ;; This function is called by:
  1222 ;;		_TMR2_Initialize
  1223 ;;		_TMR2_CallBack
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text13
  1228  0000FE                     __ptext13:
  1229                           	opt stack 0
  1230  0000FE                     _TMR2_DefaultInterruptHandler:
  1231                           	opt stack 23
  1232                           
  1233                           ;tmr2.c: 151: if(on)
  1234                           
  1235                           ;incstack = 0
  1236  0000FE  5020               	movf	_on,w,c
  1237  000100  1021               	iorwf	_on+1,w,c
  1238  000102  B4D8               	btfsc	status,2,c
  1239  000104  0012               	return	
  1240                           
  1241                           ;tmr2.c: 152: {
  1242                           ;tmr2.c: 153: if(direction1 == 1)
  1243  000106  041C               	decf	_direction1,w,c
  1244  000108  101D               	iorwf	_direction1+1,w,c
  1245  00010A  A4D8               	btfss	status,2,c
  1246  00010C  D036               	goto	i2l1031
  1247                           
  1248                           ;tmr2.c: 154: {
  1249                           ;tmr2.c: 155: if(counter>=PWMdelay)
  1250  00010E  5018               	movf	_PWMdelay,w,c
  1251  000110  5C1A               	subwf	_counter,w,c
  1252  000112  501B               	movf	_counter+1,w,c
  1253  000114  0A80               	xorlw	128
  1254  000116  6E05               	movwf	??_TMR2_DefaultInterruptHandler& (0+255),c
  1255  000118  5019               	movf	_PWMdelay+1,w,c
  1256  00011A  0A80               	xorlw	128
  1257  00011C  5805               	subwfb	??_TMR2_DefaultInterruptHandler& (0+255),w,c
  1258  00011E  A0D8               	btfss	status,0,c
  1259  000120  D029               	goto	i2l1029
  1260                           
  1261                           ;tmr2.c: 156: {
  1262                           ;tmr2.c: 157: if(PWMFlag == 1)
  1263  000122  0416               	decf	_PWMFlag,w,c
  1264  000124  1017               	iorwf	_PWMFlag+1,w,c
  1265  000126  A4D8               	btfss	status,2,c
  1266  000128  D010               	goto	i2l1023
  1267                           
  1268                           ;tmr2.c: 158: {
  1269                           ;tmr2.c: 159: PWM4_LoadDutyValue(529);
  1270  00012A  0E02               	movlw	2
  1271  00012C  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  1272  00012E  0E11               	movlw	17
  1273  000130  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
  1274  000132  EC36  F001         	call	_PWM4_LoadDutyValue	;wreg free
  1275                           
  1276                           ;tmr2.c: 160: PWM5_LoadDutyValue(529);
  1277  000136  0E02               	movlw	2
  1278  000138  6E02               	movwf	PWM5_LoadDutyValue@dutyValue+1,c
  1279  00013A  0E11               	movlw	17
  1280  00013C  6E01               	movwf	PWM5_LoadDutyValue@dutyValue,c
  1281  00013E  EC1B  F001         	call	_PWM5_LoadDutyValue	;wreg free
  1282                           
  1283                           ;tmr2.c: 161: PWMFlag = 0;
  1284  000142  0E00               	movlw	0
  1285  000144  6E17               	movwf	_PWMFlag+1,c
  1286  000146  0E00               	movlw	0
  1287  000148  D00F               	goto	L2
  1288  00014A                     i2l1023:
  1289                           
  1290                           ;tmr2.c: 163: else
  1291                           ;tmr2.c: 164: {
  1292                           ;tmr2.c: 165: PWM4_LoadDutyValue(604);
  1293  00014A  0E02               	movlw	2
  1294  00014C  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  1295  00014E  0E5C               	movlw	92
  1296  000150  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
  1297  000152  EC36  F001         	call	_PWM4_LoadDutyValue	;wreg free
  1298                           
  1299                           ;tmr2.c: 166: PWM5_LoadDutyValue(604);
  1300  000156  0E02               	movlw	2
  1301  000158  6E02               	movwf	PWM5_LoadDutyValue@dutyValue+1,c
  1302  00015A  0E5C               	movlw	92
  1303  00015C  6E01               	movwf	PWM5_LoadDutyValue@dutyValue,c
  1304  00015E  EC1B  F001         	call	_PWM5_LoadDutyValue	;wreg free
  1305                           
  1306                           ;tmr2.c: 167: PWMFlag = 1;
  1307  000162  0E00               	movlw	0
  1308  000164  6E17               	movwf	_PWMFlag+1,c
  1309  000166  0E01               	movlw	1
  1310  000168                     L2:
  1311  000168  6E16               	movwf	_PWMFlag,c
  1312                           
  1313                           ;tmr2.c: 168: }
  1314                           ;tmr2.c: 169: counter = 0;
  1315  00016A  0E00               	movlw	0
  1316  00016C  6E1B               	movwf	_counter+1,c
  1317  00016E  0E00               	movlw	0
  1318  000170  6E1A               	movwf	_counter,c
  1319                           
  1320                           ;tmr2.c: 170: }
  1321  000172  0012               	return	
  1322  000174                     i2l1029:
  1323                           
  1324                           ;tmr2.c: 171: else
  1325                           ;tmr2.c: 172: counter++;
  1326  000174  4A1A               	infsnz	_counter,f,c
  1327  000176  2A1B               	incf	_counter+1,f,c
  1328                           
  1329                           ;tmr2.c: 173: }
  1330  000178  0012               	return	
  1331  00017A                     i2l1031:
  1332                           
  1333                           ;tmr2.c: 174: else if(direction2 == 1)
  1334  00017A  041E               	decf	_direction2,w,c
  1335  00017C  101F               	iorwf	_direction2+1,w,c
  1336  00017E  A4D8               	btfss	status,2,c
  1337  000180  0012               	return	
  1338                           
  1339                           ;tmr2.c: 175: {
  1340                           ;tmr2.c: 176: if(counter>=PWMdelay)
  1341  000182  5018               	movf	_PWMdelay,w,c
  1342  000184  5C1A               	subwf	_counter,w,c
  1343  000186  501B               	movf	_counter+1,w,c
  1344  000188  0A80               	xorlw	128
  1345  00018A  6E05               	movwf	??_TMR2_DefaultInterruptHandler& (0+255),c
  1346  00018C  5019               	movf	_PWMdelay+1,w,c
  1347  00018E  0A80               	xorlw	128
  1348  000190  5805               	subwfb	??_TMR2_DefaultInterruptHandler& (0+255),w,c
  1349  000192  A0D8               	btfss	status,0,c
  1350  000194  D029               	goto	i2l1047
  1351                           
  1352                           ;tmr2.c: 177: {
  1353                           ;tmr2.c: 178: if(PWMFlag == 1)
  1354  000196  0416               	decf	_PWMFlag,w,c
  1355  000198  1017               	iorwf	_PWMFlag+1,w,c
  1356  00019A  A4D8               	btfss	status,2,c
  1357  00019C  D010               	goto	i2l1041
  1358                           
  1359                           ;tmr2.c: 179: {
  1360                           ;tmr2.c: 180: PWM4_LoadDutyValue(529);
  1361  00019E  0E02               	movlw	2
  1362  0001A0  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  1363  0001A2  0E11               	movlw	17
  1364  0001A4  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
  1365  0001A6  EC36  F001         	call	_PWM4_LoadDutyValue	;wreg free
  1366                           
  1367                           ;tmr2.c: 181: PWM5_LoadDutyValue(604);
  1368  0001AA  0E02               	movlw	2
  1369  0001AC  6E02               	movwf	PWM5_LoadDutyValue@dutyValue+1,c
  1370  0001AE  0E5C               	movlw	92
  1371  0001B0  6E01               	movwf	PWM5_LoadDutyValue@dutyValue,c
  1372  0001B2  EC1B  F001         	call	_PWM5_LoadDutyValue	;wreg free
  1373                           
  1374                           ;tmr2.c: 182: PWMFlag = 0;
  1375  0001B6  0E00               	movlw	0
  1376  0001B8  6E17               	movwf	_PWMFlag+1,c
  1377  0001BA  0E00               	movlw	0
  1378  0001BC  D00F               	goto	L3
  1379  0001BE                     i2l1041:
  1380                           
  1381                           ;tmr2.c: 184: else
  1382                           ;tmr2.c: 185: {
  1383                           ;tmr2.c: 186: PWM4_LoadDutyValue(604);
  1384  0001BE  0E02               	movlw	2
  1385  0001C0  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  1386  0001C2  0E5C               	movlw	92
  1387  0001C4  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
  1388  0001C6  EC36  F001         	call	_PWM4_LoadDutyValue	;wreg free
  1389                           
  1390                           ;tmr2.c: 187: PWM5_LoadDutyValue(529);
  1391  0001CA  0E02               	movlw	2
  1392  0001CC  6E02               	movwf	PWM5_LoadDutyValue@dutyValue+1,c
  1393  0001CE  0E11               	movlw	17
  1394  0001D0  6E01               	movwf	PWM5_LoadDutyValue@dutyValue,c
  1395  0001D2  EC1B  F001         	call	_PWM5_LoadDutyValue	;wreg free
  1396                           
  1397                           ;tmr2.c: 188: PWMFlag = 1;
  1398  0001D6  0E00               	movlw	0
  1399  0001D8  6E17               	movwf	_PWMFlag+1,c
  1400  0001DA  0E01               	movlw	1
  1401  0001DC                     L3:
  1402  0001DC  6E16               	movwf	_PWMFlag,c
  1403                           
  1404                           ;tmr2.c: 189: }
  1405                           ;tmr2.c: 190: counter = 0;
  1406  0001DE  0E00               	movlw	0
  1407  0001E0  6E1B               	movwf	_counter+1,c
  1408  0001E2  0E00               	movlw	0
  1409  0001E4  6E1A               	movwf	_counter,c
  1410                           
  1411                           ;tmr2.c: 191: }
  1412  0001E6  0012               	return	
  1413  0001E8                     i2l1047:
  1414                           
  1415                           ;tmr2.c: 192: else
  1416                           ;tmr2.c: 193: counter++;
  1417  0001E8  4A1A               	infsnz	_counter,f,c
  1418  0001EA  2A1B               	incf	_counter+1,f,c
  1419  0001EC  0012               	return	
  1420  0001EE                     __end_of_TMR2_DefaultInterruptHandler:
  1421                           	opt stack 0
  1422                           tosu	equ	0xFFF
  1423                           tosh	equ	0xFFE
  1424                           tosl	equ	0xFFD
  1425                           pclatu	equ	0xFFB
  1426                           pclath	equ	0xFFA
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           prodh	equ	0xFF4
  1432                           prodl	equ	0xFF3
  1433                           intcon	equ	0xFF2
  1434                           intcon2	equ	0xFF1
  1435                           postinc0	equ	0xFEE
  1436                           fsr0h	equ	0xFEA
  1437                           fsr0l	equ	0xFE9
  1438                           wreg	equ	0xFE8
  1439                           fsr1h	equ	0xFE2
  1440                           fsr1l	equ	0xFE1
  1441                           fsr2h	equ	0xFDA
  1442                           fsr2l	equ	0xFD9
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function _PWM5_LoadDutyValue *****************
  1446 ;; Defined at:
  1447 ;;		line 81 in file "mcc_generated_files/pwm5.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  dutyValue       2    0[COMRAM] unsigned int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;Total ram usage:        4 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_TMR2_DefaultInterruptHandler
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text14
  1475  000236                     __ptext14:
  1476                           	opt stack 0
  1477  000236                     _PWM5_LoadDutyValue:
  1478                           	opt stack 23
  1479                           
  1480                           ;pwm5.c: 84: CCPR5L = ((dutyValue & 0x03FC)>>2);
  1481                           
  1482                           ;incstack = 0
  1483  000236  C001  F003         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  1484  00023A  C002  F004         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  1485  00023E  90D8               	bcf	status,0,c
  1486  000240  3204               	rrcf	??_PWM5_LoadDutyValue+1,f,c
  1487  000242  3203               	rrcf	??_PWM5_LoadDutyValue,f,c
  1488  000244  90D8               	bcf	status,0,c
  1489  000246  3204               	rrcf	??_PWM5_LoadDutyValue+1,f,c
  1490  000248  3203               	rrcf	??_PWM5_LoadDutyValue,f,c
  1491  00024A  5003               	movf	??_PWM5_LoadDutyValue,w,c
  1492  00024C  010F               	movlb	15	; () banked
  1493  00024E  6F55               	movwf	85,b	;volatile
  1494                           
  1495                           ;pwm5.c: 87: CCP5CON = (CCP5CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1496  000250  C001  F003         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  1497  000254  0E03               	movlw	3
  1498  000256  1603               	andwf	??_PWM5_LoadDutyValue,f,c
  1499  000258  3A03               	swapf	??_PWM5_LoadDutyValue,f,c
  1500  00025A  0EF0               	movlw	240
  1501  00025C  1603               	andwf	??_PWM5_LoadDutyValue,f,c
  1502  00025E  010F               	movlb	15	; () banked
  1503  000260  5154               	movf	84,w,b	;volatile
  1504  000262  0BCF               	andlw	207
  1505  000264  1003               	iorwf	??_PWM5_LoadDutyValue,w,c
  1506  000266  010F               	movlb	15	; () banked
  1507  000268  6F54               	movwf	84,b	;volatile
  1508                           
  1509                           ; BSR set to: 15
  1510  00026A  0012               	return		;funcret
  1511  00026C                     __end_of_PWM5_LoadDutyValue:
  1512                           	opt stack 0
  1513                           tosu	equ	0xFFF
  1514                           tosh	equ	0xFFE
  1515                           tosl	equ	0xFFD
  1516                           pclatu	equ	0xFFB
  1517                           pclath	equ	0xFFA
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           prodh	equ	0xFF4
  1523                           prodl	equ	0xFF3
  1524                           intcon	equ	0xFF2
  1525                           intcon2	equ	0xFF1
  1526                           postinc0	equ	0xFEE
  1527                           fsr0h	equ	0xFEA
  1528                           fsr0l	equ	0xFE9
  1529                           wreg	equ	0xFE8
  1530                           fsr1h	equ	0xFE2
  1531                           fsr1l	equ	0xFE1
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _PWM4_LoadDutyValue *****************
  1537 ;; Defined at:
  1538 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  dutyValue       2    0[COMRAM] unsigned int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;Total ram usage:        4 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_TMR2_DefaultInterruptHandler
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text15
  1566  00026C                     __ptext15:
  1567                           	opt stack 0
  1568  00026C                     _PWM4_LoadDutyValue:
  1569                           	opt stack 23
  1570                           
  1571                           ;pwm4.c: 84: CCPR4L = ((dutyValue & 0x03FC)>>2);
  1572                           
  1573                           ; BSR set to: 15
  1574                           ;incstack = 0
  1575  00026C  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1576  000270  C002  F004         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  1577  000274  90D8               	bcf	status,0,c
  1578  000276  3204               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  1579  000278  3203               	rrcf	??_PWM4_LoadDutyValue,f,c
  1580  00027A  90D8               	bcf	status,0,c
  1581  00027C  3204               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  1582  00027E  3203               	rrcf	??_PWM4_LoadDutyValue,f,c
  1583  000280  5003               	movf	??_PWM4_LoadDutyValue,w,c
  1584  000282  010F               	movlb	15	; () banked
  1585  000284  6F58               	movwf	88,b	;volatile
  1586                           
  1587                           ;pwm4.c: 87: CCP4CON = (CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1588  000286  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1589  00028A  0E03               	movlw	3
  1590  00028C  1603               	andwf	??_PWM4_LoadDutyValue,f,c
  1591  00028E  3A03               	swapf	??_PWM4_LoadDutyValue,f,c
  1592  000290  0EF0               	movlw	240
  1593  000292  1603               	andwf	??_PWM4_LoadDutyValue,f,c
  1594  000294  010F               	movlb	15	; () banked
  1595  000296  5157               	movf	87,w,b	;volatile
  1596  000298  0BCF               	andlw	207
  1597  00029A  1003               	iorwf	??_PWM4_LoadDutyValue,w,c
  1598  00029C  010F               	movlb	15	; () banked
  1599  00029E  6F57               	movwf	87,b	;volatile
  1600                           
  1601                           ; BSR set to: 15
  1602  0002A0  0012               	return		;funcret
  1603  0002A2                     __end_of_PWM4_LoadDutyValue:
  1604                           	opt stack 0
  1605  0000                     tosu	equ	0xFFF
  1606                           tosh	equ	0xFFE
  1607                           tosl	equ	0xFFD
  1608                           pclatu	equ	0xFFB
  1609                           pclath	equ	0xFFA
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           prodh	equ	0xFF4
  1615                           prodl	equ	0xFF3
  1616                           intcon	equ	0xFF2
  1617                           intcon2	equ	0xFF1
  1618                           postinc0	equ	0xFEE
  1619                           fsr0h	equ	0xFEA
  1620                           fsr0l	equ	0xFE9
  1621                           wreg	equ	0xFE8
  1622                           fsr1h	equ	0xFE2
  1623                           fsr1l	equ	0xFE1
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           status	equ	0xFD8
  1627                           tosu	equ	0xFFF
  1628                           tosh	equ	0xFFE
  1629                           tosl	equ	0xFFD
  1630                           pclatu	equ	0xFFB
  1631                           pclath	equ	0xFFA
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           prodh	equ	0xFF4
  1637                           prodl	equ	0xFF3
  1638                           intcon	equ	0xFF2
  1639                           intcon2	equ	0xFF1
  1640                           postinc0	equ	0xFEE
  1641                           fsr0h	equ	0xFEA
  1642                           fsr0l	equ	0xFE9
  1643                           wreg	equ	0xFE8
  1644                           fsr1h	equ	0xFE2
  1645                           fsr1l	equ	0xFE1
  1646                           fsr2h	equ	0xFDA
  1647                           fsr2l	equ	0xFD9
  1648                           status	equ	0xFD8
  1649                           
  1650                           	psect	text16
  1651  000000                     __ptext16:
  1652                           	opt stack 0
  1653                           tosu	equ	0xFFF
  1654                           tosh	equ	0xFFE
  1655                           tosl	equ	0xFFD
  1656                           pclatu	equ	0xFFB
  1657                           pclath	equ	0xFFA
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           prodh	equ	0xFF4
  1663                           prodl	equ	0xFF3
  1664                           intcon	equ	0xFF2
  1665                           intcon2	equ	0xFF1
  1666                           postinc0	equ	0xFEE
  1667                           fsr0h	equ	0xFEA
  1668                           fsr0l	equ	0xFE9
  1669                           wreg	equ	0xFE8
  1670                           fsr1h	equ	0xFE2
  1671                           fsr1l	equ	0xFE1
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8
  1675                           
  1676                           	psect	rparam
  1677  0000                     tosu	equ	0xFFF
  1678                           tosh	equ	0xFFE
  1679                           tosl	equ	0xFFD
  1680                           pclatu	equ	0xFFB
  1681                           pclath	equ	0xFFA
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           prodh	equ	0xFF4
  1687                           prodl	equ	0xFF3
  1688                           intcon	equ	0xFF2
  1689                           intcon2	equ	0xFF1
  1690                           postinc0	equ	0xFEE
  1691                           fsr0h	equ	0xFEA
  1692                           fsr0l	equ	0xFE9
  1693                           wreg	equ	0xFE8
  1694                           fsr1h	equ	0xFE2
  1695                           fsr1l	equ	0xFE1
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700                           	psect	temp
  1701  000024                     btemp:
  1702                           	opt stack 0
  1703  000024                     	ds	1
  1704  0000                     int$flags	set	btemp
  1705                           tosu	equ	0xFFF
  1706                           tosh	equ	0xFFE
  1707                           tosl	equ	0xFFD
  1708                           pclatu	equ	0xFFB
  1709                           pclath	equ	0xFFA
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           prodh	equ	0xFF4
  1715                           prodl	equ	0xFF3
  1716                           intcon	equ	0xFF2
  1717                           intcon2	equ	0xFF1
  1718                           postinc0	equ	0xFEE
  1719                           fsr0h	equ	0xFEA
  1720                           fsr0l	equ	0xFE9
  1721                           wreg	equ	0xFE8
  1722                           fsr1h	equ	0xFE2
  1723                           fsr1l	equ	0xFE1
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_CallBack->_TMR2_DefaultInterruptHandler
    _TMR2_DefaultInterruptHandler->_PWM4_LoadDutyValue
    _TMR2_DefaultInterruptHandler->_PWM5_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      86
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     600
                                              5 COMRAM    14    14      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0     600
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0     600
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         1     1      0     600
                                              4 COMRAM     1     1      0
                 _PWM4_LoadDutyValue
                 _PWM5_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _PWM5_LoadDutyValue                                   4     2      2     300
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _PWM4_LoadDutyValue                                   4     2      2     300
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _PWM5_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
         _PWM4_LoadDutyValue
         _PWM5_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      23       1       37.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      12        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Apr 20 21:24:53 2016

        __end_of_TMR2_SetInterruptHandler 036E                                        l17 0362  
                                      _on 0020                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         _TMR2_Initialize 02A2                           _PWM4_Initialize 0332  
                                     tosl 000FFD                                       wreg 000FE8  
                            __CFG_LVP$OFF 000000                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                                    _main 035A                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0024  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00FA                             __CFG_IESO$OFF 000000  
                         _PWM5_Initialize 0318                              ___param_bank 000010  
              __end_of_PWM5_LoadDutyValue 026C            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 035A                                     ?_main 0001  
                                   _T2CON 000FBA                            __CFG_DEBUG$OFF 000000  
                                   i2l172 004C                                     i2l173 005A  
                                   i2l183 00BE                        _PWM4_LoadDutyValue 026C  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR2_ISR 0376                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                       ?_PWM4_LoadDutyValue 0001  
                      __CFG_MCLRE$EXTMCLR 000000                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 037C  
                          __CFG_PBADEN$ON 000000                           __initialization 02E4  
                            __end_of_main 0364                      ??_PWM4_LoadDutyValue 0003  
                 __end_of_PWM4_Initialize 034C                   __end_of_TMR2_Initialize 02C4  
             ?_INTERRUPT_InterruptManager 0001                  _TMR2_SetInterruptHandler 0364  
                                  ??_main 0016                             __activetblptr 000002  
                                  _CCPR4H 000F59                                    _CCPR5H 000F56  
                                  _CCPR4L 000F58                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                                    i2l1023 014A  
                                  i2l1031 017A                                    i2l1111 00A6  
                                  i2l1103 008E                                    i2l1041 01BE  
                                  i2l1115 00B2                                    i2l1107 009A  
                 __end_of_PWM5_Initialize 0332                                    i2l1029 0174  
                                  i2l1047 01E8                                    i2l1095 0076  
                                  i2l1099 007E                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                            __CFG_XINST$OFF 000000  
                            _CCPTMRS1bits 000F48                            __CFG_STVREN$ON 000000  
                                  clear_0 02EA                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                 __end_of_TMR2_StartTimer 0380  TMR2_SetInterruptHandler@InterruptHandler 0014  
           __size_of_INTERRUPT_Initialize 0006                         _SYSTEM_Initialize 02FE  
                              __accesstop 0060                   __end_of__initialization 02F0  
                   __end_of_TMR2_CallBack 02E4                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0016                                 ?_TMR2_ISR 0001  
                        ?_TMR2_Initialize 0001                          ?_PWM4_Initialize 0001  
             PWM4_LoadDutyValue@dutyValue 0001                 __end_of_SYSTEM_Initialize 0318  
                        ?_PWM5_Initialize 0001                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0022                        __CFG_CCP2MX$PORTC1 000000  
                              ??_TMR2_ISR 0006                        __CFG_CCP3MX$PORTB5 000000  
                                 _CCP4CON 000F57                                   _CCP5CON 000F54  
                              _direction1 001C                                _direction2 001E  
                      _PWM5_LoadDutyValue 0236                                   _OSCCON2 000FD2  
                                 i2u29_48 02D0                                   _OSCTUNE 000F9B  
                        ?_TMR2_StartTimer 0001                                   _PWMFlag 0016  
                     ?_PWM5_LoadDutyValue 0001                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0016                      ??_PWM5_LoadDutyValue 0003  
                                 __pcinit 02E4                                   __ramtop 1000  
                                 __ptext0 035A                                   __ptext1 02FE  
                                 __ptext2 02A2                                   __ptext3 037C  
                                 __ptext4 0364                                   __ptext5 0318  
                                 __ptext6 0332                                   __ptext7 01EE  
                                 __ptext8 034C                                   __ptext9 0376  
                                 _counter 001A                     _OSCILLATOR_Initialize 034C  
                               _T2CONbits 000FBA                  ??_PIN_MANAGER_Initialize 0014  
              __size_of_SYSTEM_Initialize 001A                      end_of_initialization 02F0  
                           __Lmediumconst 0000                                   postinc0 000FEE  
             __size_of_PWM4_LoadDutyValue 0036                                 _PORTBbits 000F81  
            __end_of_INTERRUPT_Initialize 037C      __end_of_TMR2_DefaultInterruptHandler 01EE  
   __size_of_TMR2_DefaultInterruptHandler 00F0              _TMR2_DefaultInterruptHandler 00FE  
                       __size_of_TMR2_ISR 0008                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 02E4           __size_of_PIN_MANAGER_Initialize 0048  
           ?_TMR2_DefaultInterruptHandler 0001                    __size_of_TMR2_CallBack 0020  
             PWM5_LoadDutyValue@dutyValue 0001                               __pbssCOMRAM 0016  
                __size_of_PWM4_Initialize 001A                  __size_of_TMR2_Initialize 0022  
                  _PIN_MANAGER_Initialize 01EE                  __size_of_PWM5_Initialize 001A  
                               __pintcode 0008              ??_INTERRUPT_InterruptManager 0006  
                        __CFG_PRICLKEN$ON 000000                      _INTERRUPT_Initialize 0376  
                           _TMR2_CallBack 02C4                                  _IPR1bits 000F9F  
                                _PIE1bits 000F9D                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00F2                                  _PIR1bits 000F9E  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 036E               __size_of_PWM5_LoadDutyValue 0036  
                                _PWMdelay 0018            ??_TMR2_DefaultInterruptHandler 0005  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 0014  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                       ??_TMR2_Initialize 0016                         ??_PWM4_Initialize 0014  
                          ?_TMR2_CallBack 0001                                  __Hrparam 0000  
              __end_of_PWM4_LoadDutyValue 02A2                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0014                         ??_PWM5_Initialize 0014  
                                __ptext11 036E                                  __ptext12 02C4  
                                __ptext13 00FE                                  __ptext14 0236  
                                __ptext15 026C                                  __ptext16 0000  
                           __size_of_main 000A                                  int$flags 0024  
                       ??_TMR2_StartTimer 0014        __end_of_INTERRUPT_InterruptManager 00FA  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0014                                  intlevel2 0000  
                         ??_TMR2_CallBack 0006                   ?_PIN_MANAGER_Initialize 0001  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 0236  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 0022  
